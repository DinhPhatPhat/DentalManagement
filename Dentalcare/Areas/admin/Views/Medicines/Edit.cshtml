@model Dentalcare.Models.Medicine

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/admin/Views/Shared/MyLayout.cshtml";
}

<h2 style="padding: 24px;">Chỉnh sửa</h2>

@using (Html.BeginForm("Edit", "Medicines", FormMethod.Post, new { @style = "padding: 24px;" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Thuốc</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ConsumableMaterial.id, "Vật liệu tiêu hao", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <!-- Display the name of the ConsumableMaterial, read-only -->
            <p class="form-control-static">@ViewBag.ConsumableMaterialName</p>
            @Html.HiddenFor(model => model.id)  <!-- You can still use the hidden field to store the id of the ConsumableMaterial -->
            @Html.ValidationMessageFor(model => model.ConsumableMaterial.id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.caredACtor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.caredACtor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.caredACtor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.instruction, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.instruction, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.instruction, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.hide, "Ẩn", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @{
                    bool hide = (Model.hide ? true : false);
                }
                @Html.CheckBoxFor(model => hide)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.new_order, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.new_order, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.new_order, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div style="padding: 24px;">
    @Html.ActionLink("Quay lại", "Index")
</div>
@section Scripts
{
    <script>
    $(function () {
        $("#instruction").keyup(function () {
            var text = $.trim($(this).val().toLowerCase());
            var text_create;

            // Thay thế các ký tự có dấu thành không dấu
            text_create = text
                .replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ẳ|ẵ|ặ/g, "a")
                .replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e")
                .replace(/ì|í|ị|ỉ|ĩ/g, "i")
                .replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o")
                .replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u")
                .replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y")
                .replace(/đ/g, "d")
                .replace(/\ /g, '-'); // Thay thế khoảng trắng thành dấu '-'
            $("#meta").val(text_create);
        }).keyup();
    });
    </script>
    
}